<!-- Creator     : groff version 1.18.1 -->
<!-- CreationDate: Mon Jun 18 15:14:07 2007 -->
<html>
<head>
<meta name="generator" content="groff -Thtml, see www.gnu.org">
<meta name="Content-Style" content="text/css">
<title>&lt;ws&gt;return</title>
</head>
<body>

<h1 align=center>&lt;ws&gt;return</h1>
<a href="#NAME">NAME</a><br>
<a href="#SYNOPSIS">SYNOPSIS</a><br>
<a href="#SYNTAX">SYNTAX</a><br>
<a href="#DESCRIPTION">DESCRIPTION</a><br>

<hr>
<pre>______________________________________________________________________________
</pre>
<a name="NAME"></a>
<h2>NAME</h2>
<!-- INDENTATION -->

<table width="100%" border=0 rules="none" frame="void"
       cols="2" cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="10%"></td>
<td width="89%">
<p>wsreturn</p>
</td>
</table>
<a name="SYNOPSIS"></a>
<h2>SYNOPSIS</h2>
<!-- INDENTATION -->
<table width="100%" border=0 rules="none" frame="void"
       cols="2" cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="10%"></td>
<td width="89%">
<p>TWiST is a front-end toolkit for rapidly deploy Tcl
procedures as a web service. The simplified API of TWiST
consists of only three procedures:
<b>&lt;ws&gt;namespace</b>, <b>&lt;ws&gt;proc</b> and
<b>&lt;ws&gt;return</b>. The names reflect the underlying
Tcl commands.</p>
<!-- INDENTATION -->
<p><b>&lt;ws&gt;return</b> Handles all requests and
responses to the TWiST web service.</p>
</td>
</table>
<a name="SYNTAX"></a>
<h2>SYNTAX</h2>
<!-- INDENTATION -->
<table width="100%" border=0 rules="none" frame="void"
       cols="2" cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="10%"></td>
<td width="89%">
<p><b>&lt;ws&gt;return</b> <i>tclNamespace</i></p>
<!-- INDENTATION -->
<pre>_________________________________________________________________
</pre>
</td>
</table>
<a name="DESCRIPTION"></a>
<h2>DESCRIPTION</h2>
<!-- INDENTATION -->

<table width="100%" border=0 rules="none" frame="void"
       cols="2" cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="10%"></td>
<td width="89%">
<p>The TWiST API enables rapid deployment of Tcl procedures
as a web service. Currently TWiST runs as an AOLserver
module and uses AOLserver as the HTTP server for request and
response. TWiST is non-invasive: the API is used in a Tcl
script in the pageroot of the AOLserver. The location of the
Tcl script file becomes the address of the web service. In
addition, the developer does not have to modify any existing
code. The TWiST API is best considered as a configuration of
an interface. This allows the interface and the internal API
to vary independently and maintains separation between code
and configuration.</p>
<!-- INDENTATION -->
<p>Once a web service is defined in a Tcl page via the TWiST
API, visiting the page with a web browser will return a list
of operations available, links to more information for each
operation, and a link to the Web Service Description (WSDL)
of the web service. The operation links can be followed to
display an example SOAP Request to invoke the operation.
This link also provides a form which can be used to submit
parameter values, invoke the service and display the actual
SOAP Request and SOAP Response.</p>
</td>
</table>
<!-- INDENTATION -->
<table width="100%" border=0 rules="none" frame="void"
       cols="2" cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="10%"></td>
<td width="89%">
<p><b>&lt;ws&gt;return</b></p></td>
</table>
<!-- INDENTATION -->
<table width="100%" border=0 rules="none" frame="void"
       cols="2" cellspacing="0" cellpadding="0">
<tr valign="top" align="left">
<td width="20%"></td>
<td width="79%">
<p>The only useful value for <b>tclNamespace</b> is one
which matches the preceeding calls to
<b>&lt;ws&gt;namespace</b> and <b>&lt;ws&gt;proc</b>. This
is the final command on a TWiST configuration/deployment
page. The behavior of <b>&lt;ws&gt;return</b> depends
entirely on the state of the Request including:</p>
<!-- INDENTATION -->
<p><b>*</b> the HTTP method (GET or POST),</p>
<!-- INDENTATION -->
<p><b>*</b> query variables during a GET,</p>
<!-- INDENTATION -->
<p><b>*</b> SOAPAction header during a POST, and</p>
<!-- INDENTATION -->
<p><b>*</b> any POSTed data</p>
</td>
</table>
<hr>
</body>
</html>
